#!/bin/bash

usage() 
{
    echo "Usage: $0 [-d <voltdrop|core>] [-r]"
    echo "Options: -d, specifies the device voltdrop or core"
    echo "         -r, reset all"
    exit 0
}

OPTIND=1

while getopts ":hrd:" opt; do
    case "${opt}" in
        h)
            usage
            ;;
        d) 
            DEVICE=${OPTARG}
            ;;
        r) 
            RESET_ALL=1
            ;;
        *) 
            usage
            ;;
    esac
done

shift $((OPTIND-1))

if [[ $DEVICE == "voltdrop" ]]; then

    target_file=$(find . -type f -name VoltDrop.elf)
    echo "VoltDrop.elf found: ${target_file}"

    echo "Checking for running instance of JLinkGDBServer"
    jlink_cmd="JLinkGDBServer -select USB -device stm32g070kb -if SWD -speed 4000"
    jlink_proc=$(pgrep --list-full ${TERM} | awk '/JLinkGDBServer/ {print $1}')

    echo "Checking for running instance of arm-none-eabi-gdb"
    gdb_cmd="arm-none-eabi-gdb -x ~/vutility/gdbinit_stm -tui ${target_file}"
    gdb_proc=$(pgrep --list-full ${TERM} | awk '/arm-none-eabi-gdb/ {print $1}')

    if [[ ${jlink_proc} ]]; then
        echo "Running process found, restarting: ${jlink_proc}"
        kill -s SIGTERM ${jlink_proc}
    fi
    echo "${jlink_cmd}"
    ${TERM} -e ${jlink_cmd} &

    if [[ ${gdb_proc} ]]; then
        echo "Running process found, restarting: ${gdb_proc}"
        kill -s SIGTERM ${gdb_proc}
    fi
    echo "${gdb_cmd}"
    ${TERM} -e ${gdb_cmd} & 
fi

exit 1
